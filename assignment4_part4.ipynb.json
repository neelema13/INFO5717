{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [],
   "source": [
    "import tweepy as tw\n",
    "import json"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [],
   "source": [
    "consumer_key = \"lfAiwqc5y6L1Euy6fUXaOr48D\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [],
   "source": [
    "consumer_secret = \"kDFUuNYBGJOHopdz0N3WcV5BbvcCphJqJVryXPCQ4G7yYAXGbz\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {},
   "outputs": [],
   "source": [
    "access_token = \"1125224928893112320-Z3ZvbHMI3u1A2FgL74Q5IXumxNXJnq\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [],
   "source": [
    "access_token_secret = \"hcn3amPQ4MfmhDcYR7gPpq0DTziVVdYO33i4LITVIGvvm\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [],
   "source": [
    "auth = tw.OAuthHandler(consumer_key, consumer_secret)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [],
   "source": [
    "auth.set_access_token(access_token, access_token_secret)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {},
   "outputs": [],
   "source": [
    "api = tw.API(auth)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {},
   "outputs": [],
   "source": [
    "search_words = [\"#texas\",\"#weather\"]\n",
    "# Collect tweets\n",
    "tweets = tw.Cursor(api.search,\n",
    "              q=search_words,\n",
    "              lang=\"en\").items(100)\n",
    "\n",
    "# Iterate and print tweets\n",
    "#for tweet in tweets:\n",
    "    #print(tweet._json)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {},
   "outputs": [],
   "source": [
    "out = {'all_tweets':[]}\n",
    "for tweet in tweets:\n",
    "    out['all_tweets'].append(tweet._json)\n",
    "    \n",
    "with open('q1.json','w') as f:\n",
    "  json.dump(out, f)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "metadata": {},
   "outputs": [],
   "source": [
    "tweets = api.search(q=\"#UNT\",count=100,since='2019-11-20', until='2019-11-28')\n",
    "out = {'all_tweets':[]}\n",
    "for tweet in tweets:\n",
    "    out['all_tweets'].append(tweet._json)\n",
    "    \n",
    "with open('q2.json','w') as f:\n",
    "  json.dump(out, f)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "metadata": {},
   "outputs": [],
   "source": [
    "tweets = api.search(geocode=\"41.6746991,-86.3459236,50mi\",count=100)\n",
    "out = {'all_tweets':[]}\n",
    "for tweet in tweets:\n",
    "    out['all_tweets'].append(tweet._json)\n",
    "    \n",
    "with open('q3.json','w') as f:\n",
    "  json.dump(out, f)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
